buildscript {
    ext {
        artifactoryContextUrl = "https://artifacts.radiantbluecloud.com/artifactory"
        baseImage = "omar-base"
        grailsVersion = project.grailsVersion
        ossimMavenProxy = "${ artifactoryContextUrl }/ossim-deps"
        dockerStatementsOverride = {[
            "FROM ${project.dockerNamespaceUrl}${project.ext.baseImage}:${project.dockerAppTag}",
            "MAINTAINER DigitalGlobe-RadiantBlue",
            "ENV SPRING_CLOUD_CONFIG_ENABLED true",
            "ENV SPRING_CLOUD_DISCOVERY_ENABLED true",
            "USER root",
            "RUN yum -y install git",,
            "COPY ${project.name}-${buildVersion}-${buildVersionTag}.jar /home/omar",
            "RUN chown -R omar /home/omar",
            "RUN chown omar /home/omar",
            "RUN chmod -R g+rw /home/omar",
            'RUN find $HOME -type d -exec chmod g+x {} +',
            "USER omar",
            "WORKDIR /home/omar",
            "RUN mkdir .ssh",
            "EXPOSE 8080",
            "CMD java -Xms256m -Xmx1024m -Dspring.profiles.active=production -Djava.security.egd=file:/dev/./urandom -Dserver.contextPath=/omar-config-server -jar /home/omar/${project.name}-${buildVersion}-${buildVersionTag}.jar"
        ]}
    }
    if ( System.env.OMAR_COMMON_PROPERTIES ) {
        apply from: System.env.OMAR_COMMON_PROPERTIES
    }

    repositories {
        mavenLocal()
        maven { url "${ossimMavenProxy}" }
        jcenter()
        maven { url "https://plugins.gradle.org/m2/" }
        maven { url "https://repo.grails.org/grails/core" }
        maven { url "${ ossimMavenProxy }" }
    }

    dependencies {
        classpath "com.bertramlabs.plugins:asset-pipeline-gradle:2.8.2"
        classpath "com.bmuschko:gradle-docker-plugin:3.0.7"
        classpath "com.github.skhatri:gradle-s3-plugin:1.0.4"
        classpath "org.grails:grails-gradle-plugin:$grailsVersion"
        classpath "org.grails.plugins:hibernate4:5.0.10"
        classpath "org.jfrog.buildinfo:build-info-extractor-gradle:latest.release"
    }
}

group "io.ossim.omar.apps"

apply plugin: "eclipse"
apply plugin: "idea"
apply plugin: "org.grails.grails-web"
apply plugin: "org.grails.grails-gsp"
apply plugin: "asset-pipeline"

apply plugin: "java"
apply plugin: "maven-publish"

ext {
    grailsVersion = project.grailsVersion
    gradleWrapperVersion = project.gradleWrapperVersion
}

repositories {
    mavenLocal()
    maven { url "https://repo.grails.org/grails/core" }
    maven { url "${ ossimMavenProxy }" }
}

dependencyManagement {
    imports {
        mavenBom "org.grails:grails-bom:$grailsVersion"
        mavenBom "org.springframework.cloud:spring-cloud-starter-parent:Brixton.SR7"
    }
    applyMavenExclusions false
}

dependencies {
    compile "org.springframework.boot:spring-boot-starter-logging"
    compile "org.springframework.boot:spring-boot-autoconfigure"
    compile "org.grails:grails-core"
    compile "org.springframework.boot:spring-boot-starter-actuator"
    compile "org.springframework.boot:spring-boot-starter-tomcat"
    compile "org.grails:grails-dependencies"
    compile "org.grails:grails-web-boot"
    compile "org.grails.plugins:cache"
    compile "org.grails.plugins:scaffolding"
    compile "org.grails.plugins:hibernate4"
    compile "org.hibernate:hibernate-ehcache"
    console "org.grails:grails-console"
    profile "org.grails.profiles:web"
    runtime "com.bertramlabs.plugins:asset-pipeline-grails:2.8.2"
    runtime "com.h2database:h2"
    testCompile "org.grails:grails-plugin-testing"
    testCompile "org.grails.plugins:geb"
    testRuntime "org.seleniumhq.selenium:selenium-htmlunit-driver:2.47.1"
    testRuntime "net.sourceforge.htmlunit:htmlunit:2.18"

    compile "org.springframework.cloud:spring-cloud-starter-config"
    compile "org.springframework.cloud:spring-cloud-starter-eureka"
}

assets {
    minifyJs = true
    minifyCss = true
}

publishing {
    publications {
        mavenJava(MavenPublication) {
            from components.java
        }
    }
}
